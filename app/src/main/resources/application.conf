akka {
  loglevel = DEBUG
  stdout-loglevel = DEBUG
  event-handlers = ["akka.event.Logging$DefaultLogger"]

  extensions = [ "akka.cluster.metrics.ClusterMetricsExtension" ]

  persistence {
    journal.plugin = "cassandra-journal"
    snapshot-store.plugin = "cassandra-snapshot-store"
  }

  actor.provider = "akka.cluster.ClusterActorRefProvider"

  remote {
    log-remote-lifecycle-events = off

    netty.tcp {
      hostname = "127.0.0.1"
      hostname = ${?APP_HOSTNAME}
      port = 2554
      port = ${?APP_PORT}
    }
  }

  cluster {
    metrics.enabled=off

    seed-nodes = [
      "akka.tcp://scalaio-microservices@127.0.0.1:2554",
//      "akka.tcp://scalaio-microservices@127.0.0.1:2555",
//      "akka.tcp://scalaio-microservices@127.0.0.1:2556"
    ]
    min-nr-of-members = 1
  }
}

scalaio {
  passivation = 5 seconds
  name = "scalaio-microservices"
  timeout = 10 seconds

  persistence {
    eventsForSnapshots = 5
    snapshotsToKeep = 5
  }
  
  kafka {
    consumer {
      brokers = "localhost:9092"
      brokers = ${?KAFKA_BROKERS}

      topic = ${scalaio.name}"-input",
      groupId = ${scalaio.name}
    }

    producer {
      brokers = "localhost:9092"
      brokers = ${?KAFKA_BROKERS}

      topic = ${scalaio.name}"-output"
    }
  }

  server {
    host = localhost
    port = 8080
  }
}

cassandra-journal.keyspace = "scalaio"
cassandra-snapshot-store.keyspace = "scalaio"

